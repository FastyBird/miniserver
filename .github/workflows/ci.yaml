name: "build"

on:
  pull_request:
    paths-ignore:
      - ".docs/**"
  push:
    branches:
      - "main"
    tags:
      - v*
  schedule:
    - cron: "0 8 * * 1" # At 08:00 on Monday

env:
  extensions: "json, intl"
  cache-version: "1"
  composer-version: "v2"
  composer-install: "composer update --no-interaction --no-progress --no-suggest --prefer-dist --prefer-stable"

jobs:
  qa:
    name: "Code quality assurance"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false
      matrix:
        php-version: [ "8.1" ]
        node-version: [ "16" ]
        operating-system: [ "ubuntu-latest" ]

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Setup PHP cache environment"
        id: "extcache"
        uses: "shivammathur/cache-extensions@v1"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.extensions }}"
          key: "${{ env.cache-version }}"

      - name: "Cache PHP extensions"
        uses: "actions/cache@v3"
        with:
          path: "${{ steps.extcache.outputs.dir }}"
          key: "${{ steps.extcache.outputs.key }}"
          restore-keys: "${{ steps.extcache.outputs.key }}"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.extensions }}"
          tools: "composer:${{ env.composer-version }}, cs2pr"
          coverage: "none"

      - name: "Setup problem matchers for PHP"
        run: 'echo "::add-matcher::${{ runner.tool_cache }}/php.json"'

      - name: "Get Composer cache directory"
        id: "composer-cache"
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'

      - name: "Cache PHP dependencies"
        uses: "actions/cache@v3"
        with:
          path: "${{ steps.composer-cache.outputs.dir }}"
          key: "${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "${{ runner.os }}-composer-"

      - name: "Validate Composer"
        run: "composer validate"

      - name: "Install dependencies"
        run: "${{ env.composer-install }}"

      - name: "Setup node"
        uses: "actions/setup-node@v3"
        with:
          node-version: "${{ matrix.node-version }}"

      - name: "Get Yarn cache directory"
        id: "yarn-cache-dir-path"
        run: 'echo "::set-output name=dir::$(yarn cache dir)"'

      - name: "Cache JS dependencies"
        uses: "actions/cache@v3"
        with:
          path: "${{ steps.yarn-cache-dir-path.outputs.dir }}"
          key: "${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}"
          restore-keys: "${{ runner.os }}-node-modules-"

      - name: "Install dependencies"
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: "yarn install"

      - name: "Check Prettier with eslint"
        run: "yarn pretty:check"

  static-analysis:
    name: "Code static analysis"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false
      matrix:
        php-version: [ "8.1" ]
        node-version: [ "16" ]
        operating-system: [ "ubuntu-latest" ]

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Setup PHP cache environment"
        id: "extcache"
        uses: "shivammathur/cache-extensions@v1"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.extensions }}"
          key: "${{ env.cache-version }}"

      - name: "Cache PHP extensions"
        uses: "actions/cache@v3"
        with:
          path: "${{ steps.extcache.outputs.dir }}"
          key: "${{ steps.extcache.outputs.key }}"
          restore-keys: "${{ steps.extcache.outputs.key }}"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.extensions }}"
          tools: "composer:${{ env.composer-version }}"
          coverage: "none"

      - name: "Setup problem matchers for PHP"
        run: 'echo "::add-matcher::${{ runner.tool_cache }}/php.json"'

      - name: "Get Composer cache directory"
        id: "composer-cache"
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'

      - name: "Cache PHP dependencies"
        uses: "actions/cache@v3"
        with:
          path: "${{ steps.composer-cache.outputs.dir }}"
          key: "${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "${{ runner.os }}-composer-"

      - name: "Install dependencies"
        run: "${{ env.composer-install }}"

      - name: "Setup node"
        uses: "actions/setup-node@v3"
        with:
          node-version: "${{ matrix.node-version }}"

      - name: "Get Yarn cache directory"
        id: "yarn-cache-dir-path"
        run: 'echo "::set-output name=dir::$(yarn cache dir)"'

      - name: "Cache JS dependencies"
        uses: "actions/cache@v3"
        with:
          path: "${{ steps.yarn-cache-dir-path.outputs.dir }}"
          key: "${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}"
          restore-keys: "${{ runner.os }}-node-modules-"

      - name: "Install dependencies"
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: "yarn install"

      - name: "Check typescript"
        run: "yarn types"

  lint:
    name: "Code linting"
    runs-on: "${{ matrix.operating-system }}"

    strategy:
      matrix:
        php-version: [ "8.1" ]
        node-version: [ "16" ]
        operating-system: [ "ubuntu-latest" ]
      fail-fast: false

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v3"

      - name: "Setup PHP cache environment"
        id: "extcache"
        uses: "shivammathur/cache-extensions@v1"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.extensions }}"
          key: "${{ env.cache-version }}"

      - name: "Cache PHP extensions"
        uses: "actions/cache@v3"
        with:
          path: "${{ steps.extcache.outputs.dir }}"
          key: "${{ steps.extcache.outputs.key }}"
          restore-keys: "${{ steps.extcache.outputs.key }}"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          extensions: "${{ env.extensions }}"
          tools: "composer:${{ env.composer-version }}"
          coverage: "none"

      - name: "Setup problem matchers for PHP"
        run: 'echo "::add-matcher::${{ runner.tool_cache }}/php.json"'

      - name: "Get Composer cache directory"
        id: "composer-cache"
        run: 'echo "::set-output name=dir::$(composer config cache-files-dir)"'

      - name: "Cache PHP dependencies"
        uses: "actions/cache@v3"
        with:
          path: "${{ steps.composer-cache.outputs.dir }}"
          key: "${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}"
          restore-keys: "${{ runner.os }}-composer-"

      - name: "Install dependencies"
        run: "${{ env.composer-install }}"

      - name: "Setup node"
        uses: "actions/setup-node@v3"
        with:
          node-version: "${{ matrix.node-version }}"

      - name: "Get Yarn cache directory"
        id: "yarn-cache-dir-path"
        run: 'echo "::set-output name=dir::$(yarn cache dir)"'

      - name: "Cache JS dependencies"
        uses: "actions/cache@v3"
        with:
          path: "${{ steps.yarn-cache-dir-path.outputs.dir }}"
          key: "${{ runner.os }}-node-modules-${{ hashFiles('yarn.lock') }}"
          restore-keys: "${{ runner.os }}-node-modules-"

      - name: "Install dependencies"
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: "yarn install"

      - name: "Check js linter"
        run: "yarn lint:js"

      - name: "Check styles linter"
        run: "yarn lint:styles"
